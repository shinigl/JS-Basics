Javascript is a lightweight and interpreted language . 

lightweight -> low CPU usage 
interpreted -> reads code line by line 

Q 1: What type of language is JS?
Ans : Object based 
Not fully OOPS , because of primitive data types.

***FEATURES***

1. Control Statements 
2. Platform independent (can run on any OS) ***
3. Asynchrounous processing 
4. Event handling 

Q 2: How JS can be run outside the browser?

Ans : Node.js 

It is a JS runtime environment that allows developers to run JS code outside the web browser.
Node is built on V8 engine (which is also used by Google Chrome).

***Variables***

It is a container which stores a value .

Ways to declare a variable:
1. var 
2. let
3. const

Ex: var x = 7 ;
    x -> identifer


***Q:3 (Interview) : Difference b/w var , let and const 

1. Inititalization 

var can be declared *without* Inititalization
let can be declared *without* Inititalization
const cannot be declared *without* Inititalization

2. Declaration
var can be updated and re-declared
let  can  be updated but cannot be re-declared
const  cannot be updated but cannot be re-declared

3.Scope : Scope is the accessibility of variables, functions & objects in some particular part of code 
during run-time .

var is global scoped 
let is block scoped
const is block scoped

Interview<--------- TEMPORAL DEAD ZONE -------->
The variable is said to be in TDZ until the time period when a variable exists in a scope 
but cant be accessed .


<------TYPE COERCION----->

The process of converting value from one type to another .

There are two types :

1. Explicit : When you change the type manually .


2. Implicit : When the types are converted automatically when applied operators .

 Q.  let a = null ;
      console.log(typeof(a));  // o/p : object

 Q. Why type of null is object ?
// **** It is a bug in JS and null signifies an empty reference to an object ***



Q<----- null v/s undefined ---->

undefined : When the variable has not been assigned to any value or not even declared .

null : It is a value which refers to a empty value .

Q. What is NaN ?

Ans : Not-a-Number. isNaN()  function is used to determine whether a value is number or not

Q. **** Hoisting in JS ****

Ans : It is a default behaviour in JS in which the declarations move to the top of their scope.

Conclusion :

Variables assigned by let and const are hoisted at the top of the block but not initialized. 

Meaning :

The block of code is aware of the variable , but it cannot be used until it has been declared. 

<------OBJECTS IN JS----->

Collections of properties based on key value pairs are known as objects .

<--- C R U D ----> 

C -> Create
R -> read
U -> update //objectName.key = value ;
D -> Delete

Q. Difference between Arrays and Objects ?

Structure :

Arrays are ordered Collections

Objects are unordered Collections

Access:

Array:
By index 

Object:
By property or key

*** In arrays, keys(index) are only present in integer datatype whereas,
***In objects, the keys can be other than integer datatype 

<-----ARRAYS----->

It is a continuous memory which stores value of same datatype , but in JS, we can store value of any datatype.

Type of Array : object

*** Methods of Array :

1. toString() -> Converts array into string 

2. split() -> Converts string into array

3. join() -> Combines all element of an array into a string

4. push() -> Appends all the elements at the end of the array. T.C : O(1) ;

5. pop() -> Remove the elements from the end of the array. T.C : O(1) ;

6. delete -> It deletes the specific element from the array & leaves empty space.
Syntax : delete arr[index];

7. shift() -> It removes first element from the array and also returns it. T.C : O(n)

8. unshift() -> It adds element at the start of the array. T.C : O(n)

9. splice() -> It allows us to modify the array by either removing , replacing or adding elements.
splice(starting index , ending index , values to be inserted). T.C: O(n)

Imp: It modifies the original array

10. slice() -> It gives a portion of an array.
Imp: It creates a new array and modifies it. 

arr.slice(inclusive index, exclusive index)  T.C : O(k) k-> Portion of the array

<-----STRINGS----->

Collections of multiple characters are called STRINGS.

# How to declare STRINGS ?

In JS,

Eg : let str1 = 'a' ; //String

     let str2 = "bc" //String

     let str3 = `Yo` //String 

     ** `` -> Backtick 

*** STRING CONCATENATION ***

Adding multiple strings is called String CONCATENATION .


*** PROPERTY OF STRING ****

1. String is immutable 

Explanantion : When string is declared , it cannot be updated at *same memory address* . 
If we update it, then it creates a new memory .
Note : It cannot be updated at same memory address 

Ex : 
let str = "namira"; //5K address 
str = "Aniket" // Updated str, new address : 6K address
console.log(str);
